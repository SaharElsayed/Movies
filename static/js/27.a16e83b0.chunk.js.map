{"version":3,"sources":["containers/home/Home.js"],"names":["Home","this","props","fetchMoviesRequest","activeTab","key","id","page","with_genres","sort_by","sortingKey","title","Fragment","fallback","React","Component","mapDispatchToProps","actions","fetchActiveTab","connect","state","sort"],"mappings":"oNAMMA,E,4LACiB,IAAD,EACiDC,KAAKC,MAAhEC,EADU,EACVA,mBADU,IACUC,UAAaC,EADvB,EACuBA,IAAKC,EAD5B,EAC4BA,GAC9CH,EAAmBE,EAAK,CACtBE,KAAM,EACNC,YAAaH,EAAM,GAAKC,EACxBG,QALgB,EACkCC,e,+BAQ5C,IACaC,EAAYV,KAAKC,MAA9BE,UAAaO,MACrB,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,WAAD,CAAUC,SAAU,kBAAC,IAAD,OAClB,kBAAC,IAAD,CAAwBF,MAAK,UAAKA,EAAL,aAC7B,kBAAC,IAAD,Y,GAhBSG,IAAMC,WAuBnBC,EAAqB,CACzBb,mBAAoBc,IACpBC,eAAgBD,KAQHE,uBALS,SAAAC,GAAK,MAAK,CAChChB,UAAWgB,EAAMhB,UACjBM,WAAYU,EAAMC,KAAKX,cAGeM,EAAzBG,CAA6CnB","file":"static/js/27.a16e83b0.chunk.js","sourcesContent":["import React, { Suspense } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Loader from './../../components/loader/Loader';\r\nimport * as actions from '../../redux/actions/index';\r\nimport * as LazyComponent from './../../utils/LazyLoaded';\r\n\r\nclass Home extends React.Component {\r\n  componentDidMount() {\r\n    const { fetchMoviesRequest, activeTab: { key, id }, sortingKey } = this.props;\r\n    fetchMoviesRequest(key, {\r\n      page: 1,\r\n      with_genres: key ? '' : id,\r\n      sort_by: sortingKey\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { activeTab: { title } } = this.props;    \r\n    return (\r\n      <React.Fragment>\r\n        <Suspense fallback={<Loader />}>\r\n          <LazyComponent.TabTitle title={`${title} Movies`} />\r\n          <LazyComponent.MoviesList />\r\n        </Suspense>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  fetchMoviesRequest: actions.fetchMoviesRequest,\r\n  fetchActiveTab: actions.fetchActiveTab\r\n};\r\n\r\nconst mapStateToprops = state => ({\r\n  activeTab: state.activeTab,\r\n  sortingKey: state.sort.sortingKey\r\n})\r\n\r\nexport default connect(mapStateToprops, mapDispatchToProps)(Home);"],"sourceRoot":""}