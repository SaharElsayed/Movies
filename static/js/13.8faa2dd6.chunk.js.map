{"version":3,"sources":["containers/moviesList/MoviesList.js","utils/Constants.js"],"names":["MoviesList","scrollToTop","scroll","this","props","list","results","page","activeTab","title","key","search","searchKeyword","pageTitle","recommended","artistKey","emptyTitle","emptyStatement","emptySrc","subTitle","Fragment","className","length","map","item","i","to","id","onClick","img","poster_path","ImgBaseURL","rating","vote_average","size","statement","React","Component","connect","state"],"mappings":"gdAQMA,E,2MACJC,YAAc,WACZC,gBAAOD,e,wEAGC,IAAD,SAYHE,KAAKC,MAZF,IAELC,KAAQC,EAFH,EAEGA,QAASC,EAFZ,EAEYA,KAFZ,IAGLC,UAAaC,EAHR,EAGQA,MAAOC,EAHf,EAGeA,IACHC,EAJZ,EAILC,cAAiBD,OACjBE,EALK,EAKLA,UACAC,EANK,EAMLA,YACAC,EAPK,EAOLA,UACAC,EARK,EAQLA,WACAC,EATK,EASLA,eACAC,EAVK,EAULA,SACAC,EAXK,EAWLA,SAGF,OACE,kBAAC,IAAMC,SAAP,KACE,yBAAKC,UAAU,kBACb,wBAAIA,UAAU,YACXR,GAAaJ,GAEhB,wBAAIY,UAAU,YACXF,GAAY,WAIbT,GAAyB,IAAlBC,EAAOW,SAAiBR,GAAiBC,EAAa,kBAAC,IAAD,MAA4B,GAG1FT,GAAWA,EAAQgB,OAAS,EAC3B,yBAAKD,UAAU,gBACZf,EAAQiB,KAAI,SAACC,EAAMC,GAClB,OACE,kBAAC,IAAD,CAAMC,GAAE,iBAAYF,EAAKG,IAAMjB,IAAKe,EAAGG,QAAS,EAAK3B,eACnD,kBAAC,IAAD,CACEQ,MAAOe,EAAKf,MACZkB,GAAIH,EAAKG,GACTE,IAAKL,EAAKM,YAAL,UAAsBC,KAAtB,OAAmCP,EAAKM,aAAxC,2BACLE,OAAQR,EAAKS,aACbC,KAAK,WATf,KAcA,kBAAC,IAAD,CACElB,WAAYA,EACZmB,UAAWlB,GAAc,oCAAiDN,GAC1EO,SAAUA,GAAY,2BAG5B,kBAAC,IAAD,CAA0BX,KAAMA,S,GAtDf6B,IAAMC,WAgEhBC,uBAJS,SAAAC,GACtB,O,yVAAO,CAAP,GAAYA,KAGCD,CAAyBtC,I,iCCxExC,kCAAO,IAAM+B,EAAa,mC","file":"static/js/13.8faa2dd6.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport { Link } from 'react-router-dom';\r\nimport { ImgBaseURL } from '../../utils/Constants';\r\nimport * as LazyComponent from './../../utils/LazyLoaded';\r\nimport './MoviesList.scss';\r\n\r\nclass MoviesList extends React.Component {\r\n  scrollToTop = () => {\r\n    scroll.scrollToTop();\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      list: { results, page },\r\n      activeTab: { title, key },\r\n      searchKeyword: { search },\r\n      pageTitle,\r\n      recommended,\r\n      artistKey,\r\n      emptyTitle,\r\n      emptyStatement,\r\n      emptySrc,\r\n      subTitle\r\n    } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"header-wrapper\">\r\n          <h1 className=\"h1-light\">\r\n            {pageTitle || title}\r\n          </h1>\r\n          <h2 className=\"h2-light\">\r\n            {subTitle || 'movie'}\r\n          </h2>\r\n        </div>\r\n        {\r\n          (!key && search.length === 0 && !recommended) || (artistKey) ? <LazyComponent.Sorting /> : ''\r\n        }\r\n        {\r\n          (results && results.length > 0) ?\r\n            <div className=\"card-wrapper\">\r\n              {results.map((item, i) => {\r\n                return (\r\n                  <Link to={`/movie/${item.id}`} key={i} onClick={this.scrollToTop()}>\r\n                    <LazyComponent.Card\r\n                      title={item.title}\r\n                      id={item.id}\r\n                      img={item.poster_path ? `${ImgBaseURL}${item.poster_path}` : `/assets/svgs/nothing.svg`}\r\n                      rating={item.vote_average}\r\n                      size='lg'\r\n                    />\r\n                  </Link>\r\n                )\r\n              })} </div> :\r\n            <LazyComponent.NotFound\r\n              emptyTitle={emptyTitle}\r\n              statement={emptyStatement ? emptyStatement : `there were no results for ${search}`}\r\n              emptySrc={emptySrc || '/assets/svgs/empty.svg'}\r\n            />\r\n        }\r\n        <LazyComponent.Pagination page={page} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToprops = state => {\r\n  return { ...state };\r\n}\r\n\r\nexport default connect(mapStateToprops)(MoviesList);","export const ImgBaseURL = 'https://image.tmdb.org/t/p/w342';"],"sourceRoot":""}