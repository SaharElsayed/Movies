{"version":3,"sources":["containers/moviesList/MoviesList.js","utils/Constants.js","assets/svgs/empty.svg","assets/svgs/nothing.svg"],"names":["MoviesList","scrollToTop","scroll","this","props","fetchMoviesRequest","activeTab","key","id","page","with_genres","sort_by","sortingKey","list","results","title","search","searchKeyword","pageTitle","recommended","artistKey","emptyTitle","emptyStatement","emptySrc","subTitle","Fragment","className","length","map","item","i","to","onClick","img","poster_path","ImgBaseURL","nothing","rating","vote_average","size","statement","empty","React","Component","mapDispatchToProps","actions","fetchActiveTab","connect","state","module","exports"],"mappings":"2fAWMA,E,2MAUJC,YAAc,WACZC,gBAAOD,e,mFAVY,IAAD,EACiDE,KAAKC,MAAhEC,EADU,EACVA,mBADU,IACUC,UAAaC,EADvB,EACuBA,IAAKC,EAD5B,EAC4BA,GAC9CH,EAAmBE,EAAK,CACtBE,KAAM,EACNC,YAAaH,EAAM,GAAKC,EACxBG,QALgB,EACkCC,e,+BAY5C,IAAD,SAYHT,KAAKC,MAZF,IAELS,KAAQC,EAFH,EAEGA,QAASL,EAFZ,EAEYA,KAFZ,IAGLH,UAAaS,EAHR,EAGQA,MAAOR,EAHf,EAGeA,IACHS,EAJZ,EAILC,cAAiBD,OACjBE,EALK,EAKLA,UACAC,EANK,EAMLA,YACAC,EAPK,EAOLA,UACAC,EARK,EAQLA,WACAC,EATK,EASLA,eACAC,EAVK,EAULA,SACAC,EAXK,EAWLA,SAGF,OACE,kBAAC,IAAMC,SAAP,KACE,yBAAKC,UAAU,kBACb,wBAAIA,UAAU,YACXR,GAAaH,GAEhB,wBAAIW,UAAU,YACXF,GAAY,WAIbjB,GAAyB,IAAlBS,EAAOW,SAAiBR,GAAiBC,EAAa,kBAAC,IAAD,MAA4B,GAG1FN,GAAWA,EAAQa,OAAS,EAC3B,yBAAKD,UAAU,gBACZZ,EAAQc,KAAI,SAACC,EAAMC,GAClB,OACE,kBAAC,IAAD,CAAMC,GAAE,iBAAYF,EAAKrB,IAAMD,IAAKuB,EAAGE,QAAS,EAAK/B,eACnD,kBAAC,IAAD,CACEc,MAAOc,EAAKd,MACZP,GAAIqB,EAAKrB,GACTyB,IAAKJ,EAAKK,YAAL,UAAsBC,KAAtB,OAAmCN,EAAKK,aAAgBE,IAC7DC,OAAQR,EAAKS,aACbC,KAAK,WATf,KAcA,kBAAC,IAAD,CACElB,WAAYA,EACZmB,UAAWlB,GAAc,oCAAiDN,GAC1EO,SAAUA,GAAYkB,MAG5B,kBAAC,IAAD,CAA0BhC,KAAMA,S,GA/DfiC,IAAMC,WAqEzBC,EAAqB,CACzBvC,mBAAoBwC,IACpBC,eAAgBD,KAOHE,uBAJS,SAAAC,GACtB,O,yVAAO,CAAP,GAAYA,KAG0BJ,EAAzBG,CAA6C/C,I,iCCzF5D,kCAAO,IAAMmC,EAAa,mC,oBCA1Bc,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,qC","file":"static/js/9.c6fc333e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport { Link } from 'react-router-dom';\r\nimport { ImgBaseURL } from '../../utils/Constants';\r\nimport * as actions from '../../redux/actions/index';\r\nimport * as LazyComponent from './../../utils/LazyLoaded';\r\nimport empty from './../../assets/svgs/empty.svg';\r\nimport nothing from './../../assets/svgs/nothing.svg';\r\nimport './MoviesList.scss';\r\n\r\nclass MoviesList extends React.Component {\r\n  componentDidMount() {\r\n    const { fetchMoviesRequest, activeTab: { key, id }, sortingKey } = this.props;\r\n    fetchMoviesRequest(key, {\r\n      page: 1,\r\n      with_genres: key ? '' : id,\r\n      sort_by: sortingKey\r\n    });\r\n  }\r\n\r\n  scrollToTop = () => {\r\n    scroll.scrollToTop();\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      list: { results, page },\r\n      activeTab: { title, key },\r\n      searchKeyword: { search },\r\n      pageTitle,\r\n      recommended,\r\n      artistKey,\r\n      emptyTitle,\r\n      emptyStatement,\r\n      emptySrc,\r\n      subTitle\r\n    } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"header-wrapper\">\r\n          <h1 className=\"h1-light\">\r\n            {pageTitle || title}\r\n          </h1>\r\n          <h2 className=\"h2-light\">\r\n            {subTitle || 'movie'}\r\n          </h2>\r\n        </div>\r\n        {\r\n          (!key && search.length === 0 && !recommended) || (artistKey) ? <LazyComponent.Sorting /> : ''\r\n        }\r\n        {\r\n          (results && results.length > 0) ?\r\n            <div className=\"card-wrapper\">\r\n              {results.map((item, i) => {\r\n                return (\r\n                  <Link to={`/movie/${item.id}`} key={i} onClick={this.scrollToTop()}>\r\n                    <LazyComponent.Card\r\n                      title={item.title}\r\n                      id={item.id}\r\n                      img={item.poster_path ? `${ImgBaseURL}${item.poster_path}` : nothing}\r\n                      rating={item.vote_average}\r\n                      size='lg'\r\n                    />\r\n                  </Link>\r\n                )\r\n              })} </div> :\r\n            <LazyComponent.NotFound\r\n              emptyTitle={emptyTitle}\r\n              statement={emptyStatement ? emptyStatement : `there were no results for ${search}`}\r\n              emptySrc={emptySrc || empty}\r\n            />\r\n        }\r\n        <LazyComponent.Pagination page={page} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  fetchMoviesRequest: actions.fetchMoviesRequest,\r\n  fetchActiveTab: actions.fetchActiveTab\r\n};\r\n\r\nconst mapStateToprops = state => {\r\n  return { ...state };\r\n}\r\n\r\nexport default connect(mapStateToprops, mapDispatchToProps)(MoviesList);","export const ImgBaseURL = 'https://image.tmdb.org/t/p/w342';","module.exports = __webpack_public_path__ + \"static/media/empty.e0b5f43f.svg\";","module.exports = __webpack_public_path__ + \"static/media/nothing.4c58037b.svg\";"],"sourceRoot":""}